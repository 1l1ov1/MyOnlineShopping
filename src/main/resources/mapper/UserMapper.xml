<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wan.mapper.UserMapper">
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into user(username, password, phone, create_time, update_time,
                         status, account_status, is_online)
        VALUES (#{username}, #{password}, #{phone},
                #{createTime}, #{updateTime}, #{status}, #{accountStatus},
                #{isOnline})
    </insert>
    <update id="update">
        update user
        <set>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="accountStatus != null">
                account_status = #{accountStatus},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="isOnline != null">
                is_online = #{isOnline},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="avatar != null">
                avatar = #{avatar},
            </if>
            <if test="money != null">
                money = #{money}
            </if>
        </set>
        where id = #{id}

    </update>
    <update id="batchUpdateUsers">
        update user
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="password=case" suffix="end,">
                <foreach collection="userList" item="user" index="index">
                    <if test="user.password != null and user.password != ''">
                        when id=#{user.id} then #{user.password}
                    </if>
                </foreach>
            </trim>
            <trim prefix="status=case" suffix="end,">
                <foreach collection="userList" item="user" index="index">
                    <if test="user.status != null">
                        when id=#{user.id} then #{user.status}
                    </if>
                </foreach>
            </trim>
            <trim prefix="avatar=case" suffix="end,">
                <foreach collection="userList" item="user" index="index">
                    <if test="user.avatar != null">
                        when id=#{user.id} then #{user.avatar}
                    </if>
                </foreach>
            </trim>
            <trim prefix="money=case" suffix="end,">
                <foreach collection="userList" item="user" index="index">
                    <if test="user.money != null">
                        when id=#{user.id} then #{user.money}
                    </if>
                </foreach>
            </trim>
            <trim prefix="phone=case" suffix="end,">
                <foreach collection="userList" item="user" index="index">
                    <if test="user.phone != null">
                        when id=#{user.id} then #{user.phone}
                    </if>
                </foreach>
            </trim>
            <trim prefix="is_online=case" suffix="end,">
                <foreach collection="userList" item="user" index="index">
                    <if test="user.isOnline != null">
                        when id=#{user.id} then #{user.isOnline}
                    </if>
                </foreach>
            </trim>
            <trim prefix="account_status=case" suffix="end,">
                <foreach collection="userList" item="user" index="index">
                    <if test="user.accountStatus != null">
                        when id=#{user.id} then #{user.accountStatus}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time=case" suffix="end,">
                <foreach collection="userList" item="user" index="index">
                    <if test="user.updateTime != null">
                        when id=#{user.id} then #{user.updateTime}
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="userList" separator="or" item="user" index="index">
            id = #{user.id}
        </foreach>
    </update>
    <delete id="deleteByIds">
        delete from user where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <select id="findUserByIds" resultType="com.wan.entity.User">
        select * from user where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <resultMap id="userOrdersVO" type="com.wan.vo.UserOrdersVO">
        <id property="id" column="id"></id>
        <result property="status" column="status"></result>
        <result property="number" column="number"></result>
        <result property="pay" column="pay"></result>
        <result property="totalPrice" column="total_price"></result>
        <result property="createTime" column="create_time"></result>
        <result property="updateTime" column="update_time"></result>
        <association property="goods" javaType="com.wan.entity.Goods"
        columnPrefix="g_">
            <id column="id" property="id"></id>
            <result column="goods_name" property="goodsName"></result>
            <result column="price" property="price"></result>
            <result column="discount" property="discount"></result>
            <result column="cover_pic" property="coverPic"></result>
            <result column="description" property="description"></result>
        </association>
        <association property="store" javaType="com.wan.entity.Store"
        columnPrefix="s_">
            <id column="id" property="id"></id>
            <result column="store_name" property="storeName"></result>
            <result column="logo" property="logo"></result>
        </association>
    </resultMap>
    <select id="queryOneTypeOrders" resultMap="userOrdersVO">
        SELECT o.id,
        o.`status`,
        o.pay,
        o.number,
        o.total_price,
        g.id g_id,
        g.goods_name g_goods_name,
        g.cover_pic g_cover_pic,
        g.description g_description,
        g.price g_price,
        g.discount g_discount,
        s.id s_id,
        s.store_name s_store_name,
        s.logo s_logo,
        o.create_time
        FROM orders o
        INNER JOIN goods g on o.goods_id = g.id
        INNER JOIN store s ON o.store_id = s.id
        where o.user_id = 1
        <if test="target != null and target != 0">
            and o.status = #{target}
        </if>
    order by o.create_time desc
    </select>
</mapper>